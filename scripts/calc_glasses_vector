#!/usr/bin/env python3
import os
import numpy as np
import ai_old.constants as c
from ai_old.dataset import DatasetBase
import ai_old.dataset.filter_func as ff

# TODO: cluster separately by gender?

# get data
class DS(DatasetBase):
    def filter_func(self):
        return ff.for_dataset('facegen')

    def select_cols(self):
        return ['z', 'has_glasses']

dataset = DS().inference(batch_size=1)

# cluster
glassed = np.zeros(512)
glassed_count = 0
glassless = np.zeros(512)
glassless_count = 0
for batch in dataset:
    assert len(batch['z']) == 1
    z = batch['z'][0].numpy()
    has_glasses = batch['has_glasses'][0].item()
    assert has_glasses in [1., 0.]
    if has_glasses == 1.:
        glassed += z
        glassed_count += 1
    else:
        glassless += z
        glassless_count += 1
glassed /= glassed_count
glassless /= glassless_count
print(f'clustered {glassed_count} glassed and {glassless_count} glassless')

# calc and save vector
vector = glassed - glassless
np.savetxt(os.path.join(c.LERP_PATH, 'glasses/0.gz'), vector)
print('saved vector')
