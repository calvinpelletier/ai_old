# Dockerfile for server images, used to release new versions of ASI.
#
# In contrast to the image configured by the other Dockerfile, this actually contains a snapshot of ASI, copied directly
# into the image (not mounted)

# TODO: consider sharing code between dockerfiles if that's possible.
# TODO: remove python libs that aren't needed for server.

FROM nvcr.io/nvidia/pytorch:20.12-py3

# idk man
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# python deps
RUN pip install scipy
RUN pip install scikit-image
RUN pip install opencv-python flask dlib google-cloud-storage pandas lmdb
RUN pip install lpips
RUN pip install kornia
RUN pip install adabelief-pytorch
RUN pip install ranger-adabelief
RUN pip install marshmallow
RUN pip install gcsfs
RUN pip install google-cloud-logging
RUN pip install google-cloud-secret-manager
RUN pip install pyspng
RUN pip install azure-cognitiveservices-vision-face
RUN pip install torchdiffeq
RUN pip install git+https://github.com/calvinpelletier/CLIP.git
RUN pip install wandb

# tfjs conversion
RUN pip install tensorflow
WORKDIR /tmp
RUN git clone https://github.com/onnx/onnx-tensorflow.git
WORKDIR /tmp/onnx-tensorflow
RUN pip install -e .
RUN pip install onnx
RUN pip install tensorflowjs
RUN pip install tensorflow-addons

# other deps
RUN apt-get update
RUN DEBIAN_FRONTEND="noninteractive" apt-get install -y sudo python3-opencv net-tools ninja-build

# apache/flask/wsgi
RUN DEBIAN_FRONTEND="noninteractive" apt-get install -y apache2 apache2-dev libapache2-mod-wsgi-py3
RUN cp /etc/apache2/ports.conf /etc/apache2/ports.conf.backup
RUN echo 'Listen 5001' > /etc/apache2/ports.conf
RUN echo 'ServerName localhost' > /etc/apache2/conf-available/asi.conf

# user
# TODO: Understand if uid/gid will be needed on compute servers.
RUN useradd -m asiu --uid 1002
RUN groupadd asig --gid 1003
RUN usermod -a -G asig asiu
RUN chown -R asiu:asig /etc/apache2
RUN chown -R asiu:asig /var/lib/apache2
RUN chown -R asiu:asig /var/log/apache2
RUN chown -R asiu:asig /var/run/apache2
RUN chown -R asiu:asig /var/www
USER asiu
ENV PYTHONPATH "${PYTHONPATH}:/home/asiu/code"
ENV ASI_CODE "/home/asiu/code/asi"
WORKDIR /home/asiu

# TODO: remove these values if we're sure they aren't being used in code.
ENV ASI_DATASETS "/home/asiu/datasets"
ENV ASI_DATA "/home/asiu/data"
ENV ASI_CONFIG_FILENAME "prod.yaml"
ENV GOOGLE_APPLICATION_CREDENTIALS "/home/asiu/google_application_creds.json"

# Copy the asi repo files into the image.
#ADD . /home/asiu/code/asi

# idk man 2 electric boogaloo
RUN (printf '#!/bin/bash\nunset TORCH_CUDA_ARCH_LIST\nexec \"$@\"\n' >> /workspace/entry.sh) && chmod a+x /workspace/entry.sh
ENTRYPOINT ["/workspace/entry.sh"]

EXPOSE 5001
